----------------------------------------
Introduction to Programming with Python
----------------------------------------

-------------
Lecture 0
Fucnticons, Variables
-------------
- Arguments - inputs to a fucntion
- Sample function:
print("NAME")

- Bugs - a mistake in a program
- Variable - a container for some vaule

= (equal sign) - assignement character

- Passing multiple arguments to a funcition it adds space characert by default
var = NAME
print("Hello,", var)

- str - string data type
- format string
var = NAME
print(f"Hello, {var}")

- int - integers
- specify how many character to print when using f-strings
print(f"{VAR:.2f}")
- This print two characters after value VAR

- def - define a function

-------------
Lecture 1
Conditionals
-------------
>
>=
<
<=
==
!=

if
- ability to ask questions in Python
- Sample: if following block of code is true, run certain code

elif
- else and if combined

else

or
- Ask two questions

and

match

-------------
Lecture 2
Loops
-------------
while

i = i + 1, same as i += 1

for

list
a = []

range()
- return a range of vaules

_
- use underscore symbol to signify the varaiable that is required to use by other feature

- Sample loops
- Ask user for n, then loop through that number:
while True:
    n = int(input("What's n? "))
    if n > 0:
        break

for _ in range(n):
    print("meow")

- Loops defined as functions:
def main():
    number = get_number()
    meow(number)

def get_number():
    while True:
        n = int(input("What's n? "))
        if n > 0:
            return n

def meow(n):
    for _ in range(n):
        print("meow")

main()

len
- length function
- Sample len usage:
students = ["Hermione", "Harry", "Ron"]

for i in range(len(students)):
    print(i + 1, students[i])


dict
- dictionary
- empty disctionary:
var = {}
- accessing values in a dictionary:
students= {
    "Hermione": "Gryffindor",
    "Harry": "Gryffindor",
    "Ron": "Gryffindor",
    "Draco": "Slytherin"
}

print(students["Hermione"])
print(students["Harry"])
print(students["Ron"])
print(students["Draco"])

- Access key and values in a dictionary:
students = {
    "Hermione": "Gryffindor",
    "Harry": "Gryffindor",
    "Ron": "Gryffindor",
    "Draco": "Slytherin"
}

for student in students:
    print(student, students[student], sep =", ")

None
- absense of a value




